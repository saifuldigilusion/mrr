{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","views/upload/Upload.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","Upload","useState","selectedFiles","setSelectedFiles","setCurrentFile","selectedClientCode","setClientCode","uploadling","setUploading","progress","setProgress","setMessage","setFileInfos","redirect","setRedirect","fetchOptions","setFetchOptions","label","selectOptions","setSelectOptions","useEffect","UploadService","getFiles","then","response","data","httpClient","get","res","catch","error","console","log","to","renderRedirect","xs","sm","action","method","encType","className","row","col","md","htmlFor","custom","id","onChange","event","target","map","v","key","files","size","color","type","disabled","onClick","currentFile","upload","Math","round","loaded","total","message"],"mappings":"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","file":"static/js/22.a73340ca.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CFade,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  CTextarea,\n  CInput,\n  CInputFile,\n  CInputCheckbox,\n  CInputRadio,\n  CInputGroup,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdown,\n  CInputGroupText,\n  CLabel,\n  CSelect,\n  CRow,\n  CWidgetProgress,\n  CProgress\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { UploadService } from '../../services';\nimport { httpClient } from '../../helpers';\n\nconst Upload = () => {\n    const [selectedFiles, setSelectedFiles] = useState(undefined);\n    const [currentFile, setCurrentFile] = useState(undefined);\n    const [selectedClientCode, setClientCode] = useState(undefined);\n    const [uploadling, setUploading] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [fileInfos, setFileInfos] = useState([]);\n    const [redirect, setRedirect] = useState(false);\n    const [fetchOptions, setFetchOptions] = useState(true);\n    const [selectOptions, setSelectOptions] = useState([{value: \"\", label: \"\"}])\n\n    useEffect(() => {\n\n      if(selectedFiles) {\n        UploadService.getFiles().then((response) => {\n          setFileInfos(response.data);\n        });\n      }\n\n      if(fetchOptions) {\n        const url = \"/be/api/upload/clientcode\";\n        httpClient\n          .get(url)\n          .then((res) => {\n            setSelectOptions(res.data);\n          })\n          .catch((error) => {\n            console.error(\"Error\", error);\n          });\n          setFetchOptions(false);\n      }\n    }, [fetchOptions, uploadling]);\n\n    const selectFile = (event) => {\n        setSelectedFiles(event.target.files);\n    };\n\n    const renderRedirect = () => {\n      console.log(\"redirect \" + redirect);\n      if(redirect) {\n        return <Redirect to='/' />\n      }\n    }\n\n    const upload = () => {\n        let currentFile = selectedFiles[0];\n    \n        setProgress(0);\n        setUploading(true);\n        setCurrentFile(currentFile);\n    \n        UploadService.upload(currentFile, selectedClientCode, (event) => {\n          setProgress(Math.round((100 * event.loaded) / event.total));\n        })\n          //.then(HandleResponse)\n          .then((response) => {\n            console.log(\"upload then response\");\n            setMessage(response.data.message);\n            setSelectedFiles(undefined);\n            setUploading(false);\n            return UploadService.getFiles();\n          })\n          .then((files) => {\n            console.log(\"upload then files\");\n            setFileInfos(files.data);\n            setRedirect(true);\n          })\n          .catch(() => {\n            setProgress(0);\n            setMessage(\"Could not upload the file!\");\n            setUploading(false);\n          });\n      \n        setSelectedFiles(undefined);\n        setProgress(0);\n    };\n\n  return (\n    <>\n      { renderRedirect() }\n      <CRow>\n        <CCol xs=\"12\" sm=\"6\">\n          <CCard>\n            <CCardHeader>\n              Upload Claim Receipt\n            </CCardHeader>\n            <CCardBody>\n                <CForm action=\"/api/fileupload\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CLabel col md=\"3\" htmlFor=\"select\">Client Code</CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect custom name=\"clientcode\" id=\"clientcode\" onChange={event => setClientCode(event.target.value)}>\n                    {selectOptions.map((v, i) => {\n                      return <option value={v.value} key={v.value}>{v.label}</option>\n                    })}\n                    </CSelect>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col md=\"3\" htmlFor=\"file-input\">File input</CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInputFile id=\"file-input\" name=\"file-input\" onChange={selectFile}/>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col md=\"3\" htmlFor=\"file-input\"></CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CProgress size=\"sm\" color=\"success\" value={progress} className={uploadling ? \"mb-1 bg-gray visible\":\"mb-1 bg-gray invisible\"} />\n                  </CCol>\n                </CFormGroup>\n                <div className=\"form-actions\">\n                    <CButton type=\"submit\" size=\"sm\" color=\"primary\" disabled={uploadling} onClick={upload}><CIcon name=\"cil-scrubber\" /> {uploadling ? \"Uploading..\" : \"Submit\"}</CButton>\n                </div>\n                </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Upload\n"],"sourceRoot":""}