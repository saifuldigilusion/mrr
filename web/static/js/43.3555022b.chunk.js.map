{"version":3,"sources":["views/pages/login/Login.js"],"names":["Login","props","state","username","password","isSubmitting","errorMessage","AuthenticationService","currentUserValue","history","push","logout","handleChange","bind","handleSubmit","e","target","name","value","this","setState","preventDefault","login","then","user","from","location","pathname","error","className","md","onSubmit","type","placeholder","autoComplete","onChange","role","xs","color","to","style","width","React","Component"],"mappings":"iSAmBMA,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,SAAU,GACVC,SAAU,GACVC,cAAc,EACdC,aAAc,IAIZC,IAAsBC,kBACxB,EAAKP,MAAMQ,QAAQC,KAAK,KAI1BH,IAAsBI,SAEtB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAnBH,E,yDAsBNE,GAAI,IAAD,EACUA,EAAEC,OAAlBC,EADM,EACNA,KAAMC,EADA,EACAA,MACdC,KAAKC,SAAL,eAAiBH,EAAOC,M,mCAGbH,GAAI,IAAD,OACdA,EAAEM,iBAEFF,KAAKC,SAAS,CAAEf,cAAc,IAHhB,MAIiBc,KAAKjB,MAA5BC,EAJM,EAINA,SAAUC,EAJJ,EAIIA,SAElBG,IAAsBe,MAAMnB,EAAUC,GACrCmB,MACC,SAAAC,GAAQ,IAIEC,GAAS,EAAKxB,MAAMyB,SAASxB,OAAS,CAAEuB,KAAM,CAAEE,SAAU,OAA1DF,KACR,EAAKxB,MAAMQ,QAAQC,KAAKe,MAE1B,SAAAG,GACE,EAAKR,SAAS,CAAEf,cAAc,EAAOC,aAAcsB,S,+BAOvD,OACE,yBAAKC,UAAU,sDACb,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAMA,UAAU,0BACd,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,UAAU,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOZ,KAAK,YAAYc,SAAUZ,KAAKL,cACrC,qCACA,uBAAGe,UAAU,cAAb,2BACA,kBAAC,IAAD,CAAaA,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOZ,KAAK,eAGhB,kBAAC,IAAD,CAAQe,KAAK,OAAOC,YAAY,WAAWC,aAAa,WAAWjB,KAAK,WAAWkB,SAAUhB,KAAKP,gBAEpG,kBAAC,IAAD,CAAaiB,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOZ,KAAK,sBAGhB,kBAAC,IAAD,CAAQe,KAAK,WAAWC,YAAY,WAAWC,aAAa,mBAAmBjB,KAAK,WAAWkB,SAAUhB,KAAKP,gBAE9GO,KAAKjB,MAAMI,cACX,yBAAKuB,UAAU,qBAAqBO,KAAK,SAAUjB,KAAKjB,MAAMI,aAA9D,KAEF,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAM+B,GAAG,KACP,kBAAC,IAAD,CAASC,MAAM,UAAUT,UAAU,OAAOG,KAAK,UAA/C,UAEF,kBAAC,IAAD,CAAMK,GAAG,IAAIR,UAAU,cACrB,kBAAC,IAAD,CAAMU,GAAG,mBACP,kBAAC,IAAD,CAASD,MAAM,OAAOT,UAAU,QAAhC,0BAOZ,kBAAC,IAAD,CAAOA,UAAU,4CAA4CW,MAAO,CAAEC,MAAO,QAC3E,kBAAC,IAAD,CAAWZ,UAAU,eACnB,6BACE,iEACA,gD,GAnGFa,IAAMC,WAgHX3C","file":"static/js/43.3555022b.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { AuthenticationService, UserService } from '../../../services';\n\nclass Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      isSubmitting: false,\n      errorMessage: ''\n    };\n\n    // redirect to home if already logged in\n    if (AuthenticationService.currentUserValue) { \n      this.props.history.push('/');\n    }\n\n    // logout first \n    AuthenticationService.logout();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.setState({ isSubmitting: true });\n    const { username, password } = this.state;\n    \n    AuthenticationService.login(username, password)\n    .then(\n      user => {\n\n        // get user details\n        //UserService.getAll();\n        const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n        this.props.history.push(from);\n      },\n      error => {\n        this.setState({ isSubmitting: false, errorMessage: error});\n      }\n    );\n    \n  }\n\n  render() {\n    return (\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"8\">\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm name=\"loginForm\" onSubmit={this.handleSubmit}>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <CInputGroup className=\"mb-3\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-user\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\" name=\"username\" onChange={this.handleChange} />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-lock-locked\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" name=\"password\" onChange={this.handleChange} />\n                      </CInputGroup>\n                      { this.state.errorMessage && \n                        <div className=\"alert alert-danger\" role=\"alert\">{ this.state.errorMessage } </div>\n                      }\n                      <CRow>\n                        <CCol xs=\"6\">\n                          <CButton color=\"primary\" className=\"px-4\" type=\"submit\">Login</CButton>\n                        </CCol>\n                        <CCol xs=\"6\" className=\"text-right\">\n                          <Link to=\"/forgetpassword\">\n                            <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                          </Link>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n                <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                  <CCardBody className=\"text-center\">\n                    <div>\n                      <h2>Medical Claim Document Extraction</h2>\n                      <p>(POC)</p>\n                    </div>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    )\n  }\n}\n\nexport default Login\n"],"sourceRoot":""}